name: Create Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'
          cache: 'npm'
          
      - name: Install Dependencies
        working-directory: electron
        run: npm ci

      - name: Generate Certificate
        working-directory: electron
        shell: bash
        run: |
          openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes -subj "/CN=Liberchat"
          openssl pkcs12 -export -out cert.pfx -inkey key.pem -in cert.pem -passout pass:liberchat
        
      - name: Build
        working-directory: electron
        env:
          CSC_LINK: cert.pfx
          CSC_KEY_PASSWORD: liberchat
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Starting build process..."
          npm run build
          echo "Build process completed"
        
      - name: Verify Build
        working-directory: electron/dist
        shell: pwsh
        run: |
          echo "Verifying build artifacts..."
          Get-ChildItem -Recurse
          if (!(Test-Path "*Setup*.exe")) {
            Write-Error "No installer found in dist directory"
            exit 1
          }
          $exeFile = Get-ChildItem "*Setup*.exe" | Select-Object -First 1
          Write-Output "Found installer: $($exeFile.Name)"
        
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: "electron/dist/*Setup*.exe"
          draft: false
          prerelease: false
          body: |
            # Liberchat ${{ github.ref_name }}

            Nouvelle version de Liberchat pour Windows !

            ## Installation
            1. Téléchargez l'installateur Liberchat Setup.exe
            2. Double-cliquez sur l'installateur
            3. Suivez les instructions d'installation
            4. L'application sera installée avec son icône personnalisée
            
            ## Version
            ${{ github.ref_name }}
            
            ## Date de publication
            ${{ format(github.event.repository.updated_at, 'DD/MM/YYYY') }}

            
            ## Notes de version
            - Installation Windows avec icône personnalisée
            - Interface utilisateur améliorée
            - Raccourcis bureau et menu démarrer
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup
        if: always()
        working-directory: electron
        shell: pwsh
        run: |
          Remove-Item -Path cert.pfx -Force -ErrorAction SilentlyContinue
          Remove-Item -Path key.pem -Force -ErrorAction SilentlyContinue
          Remove-Item -Path cert.pem -Force -ErrorAction SilentlyContinue

